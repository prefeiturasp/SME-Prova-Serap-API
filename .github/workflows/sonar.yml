name: Testing Sonar
 
  workflow_dispatch:  

jobs:

  build:

    runs-on: sonar

    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Install dependencies
        run: dotnet restore SME.SERAp.Prova.Api.sln

      - name: Sonarqube Begin
        run: | 
          export PATH="$PATH:/runner/.dotnet/tools"          
          dotnet sonarscanner begin  /k:${{ secrets.SONAR_PROJECT_KEY }} /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="http://sonar.sme.prefeitura.sp.gov.br/" /d:sonar.cs.opencover.reportsPaths="teste/SME.SERAp.Aplicacao.Test/coverage.opencover.xml,teste/SME.SERAp.Dominio.Test/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Test*.cs"

      - name: Build
        run: dotnet build SME.SERAp.Prova.Api.sln

      - name: Test with the dotnet CLI
        run: dotnet test SME.SERAp.Prova.Api.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Sonarqube end
        run: | 
          export PATH="$PATH:/runner/.dotnet/tools"  
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
